@using Blibrary.Shared.Components.Form
@using Blibrary.Shared.Models

@inherits InputBase<string>

<div class="d-flex flex-nowrap">

    @if (!Disabled)
    {
        <select @onchange="SetRuleValue" class="form-select">
            <option value="" />
            @foreach (var item in ColorVariableDropdown)
            {
                string optionKey = $"option-{item.Key}";
                @if (item.Key == Key || item.Value == Value)
                {
                    <option @key="optionKey" selected value="@item.Value">@item.Key</option>
                }
                else
                {
                    <option @key="optionKey" value="@item.Value">@item.Key</option>
                }
            }
        </select>
        <input class="form-control-color p-0" type="color" value="@Value" @oninput='SetRuleValue' />
    }
    else
    {
        <select disabled @onchange="SetRuleValue" class="form-select">
            <option value="" />
            @foreach (var item in ColorVariableDropdown)
            {
                @if (item.Key == Key || item.Value == Value)
                {
                    <option selected value="@item.Value">@item.Key</option>
                }
                else
                {
                    <option value="@item.Value">@item.Key</option>
                }
            }
        </select>
        <input disabled class="form-control-color p-0" type="color" value="@Value" />
    }
</div>


@code {

    public string InputType { get; set; } = "color";

    private async Task SetRuleValue(ChangeEventArgs args)
    {
        Value = args.Value?.ToString() ?? "";
        await ValueChanged.InvokeAsync(Value);
    }

    [Parameter]
    public List<ScssVariable> ColorVariableDropdown { get; set; } = [];
}
