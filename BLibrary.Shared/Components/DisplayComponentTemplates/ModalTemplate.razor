@using Blibrary.Shared.Models
@implements IDisplayComponentTemplate

<!-- Button trigger modal -->
<div class="container-fluid">
    <div class="row">
        <div class="col">
        </div>
    </div>
    <div class="row">
        <div class="col">
            <button class="btn btn-primary" @onclick="Toggle">
                Toggle Modal
            </button>

            <div class="modal display-modal @VisibilityClass">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">

                            <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                            <button @onclick="Hide" type="button" class="btn-close" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col">
                                    Modal Variables: <br />
                                </div>
                            </div>

                            @foreach (var item in Variables.Where(v => v.SectionTitle == "modal"))
                            {
                                <div class="row">
                                    <div class="col">
                                        @item.SectionTitle
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <div class="d-flex flex-wrap">
                                            @((MarkupString)item.ToCssSection().Replace(";", ";<br />"))
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="modal-footer">
                            <button @onclick="Hide" type="button" class="btn btn-secondary">Close</button>
                            <button type="button" class="btn btn-primary">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public List<ScssVariableSection> Variables { get; set; } = [];

    public string VisibilityClass { get; set; } = "d-contents";

    bool _visible = true;

    public string Id { get; set; } = Guid.NewGuid().ToString();

    protected override async Task OnInitializedAsync()
    {
        Id = "exampleModal";
        Show();
        await base.OnInitializedAsync();
    }
    public void Show()
    {
        _visible = true;
        VisibilityClass = "d-contents";
    }

    public void Hide()
    {
        _visible = false;
        VisibilityClass = "d-none";
    }

    public void Toggle()
    {
        _visible = !_visible;
        VisibilityClass = _visible ? "d-contents" : "d-none";

    }
}
